
package _T_MODULE_T__sim_pkg;

    import util_pkg::wait_cycles;
    import util_pkg::wait_timeout;
    import util_pkg::wait_timeout_cycles;
    import util_pkg::print_test_result;
    import util_pkg::print_tests_stats;

    class cls_agent__T_MODULE_T_;

        /*
        * contains an exemplary event setup for clk posedges and for changes on
        * a 4-button vector
        */

        virtual ifc__T_MODULE_T_ if__T_MODULE_T_;
        event ev_buttons;
        event ev_clk;

        function new(virtual ifc__T_MODULE_T_ if__T_MODULE_T_);
            this.if__T_MODULE_T_ = if__T_MODULE_T_;
            this.if__T_MODULE_T_.buttons = '0;

            // SIGNAL -> EVENT
            fork
                this.clk_event();
                this.btn_change_event();
            join_none

        endfunction

        //----------------------------
        // SIGNAL -> EVENT
        //----------------------------
        // (necessary for older vivado/xsim versions which don't handle const 
        // ref properly)
        
        task clk_event();
            forever begin
                @(posedge if__T_MODULE_T_.clk);
                ->ev_clk;
            end
        endtask

        task btn_change_event();
            logic [3:0] buttons_old = if__T_MODULE_T_.buttons;
            forever begin
                wait(buttons_old != if__T_MODULE_T_.buttons);
                buttons_old = if__T_MODULE_T_.buttons;
                ->ev_buttons;
            end
        endtask

        //----------------------------
        // TEST OPERATION
        //----------------------------

        task run();
            test();
            $finish;
        endtask

        task test();
            bit timed_out;
            int passed = 0;
            int failed = 0;

            @(posedge if__T_MODULE_T_.clk);

            wait_timeout_cycles(ev_buttons, ev_clk, 3, timed_out);
            if (timed_out) begin
                // functionality test passed if timed out, because there is no
                // change on the buttons
                passed++;
            end else begin
                failed++;
            end

            print_test_result("functionality check", timed_out);
            print_tests_stats(passed, failed);
        endtask

    endclass

endpackage
